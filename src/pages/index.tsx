/**
 * The 'index' page is the main page for this site.  If the user is signed out, we
 * will show a landing page.  If a student is logged in, they should see '_student.tsx'
 * If an instructor is logged in, they should see '_instructor.tsx'.
 **/
import { isStudent } from '@/lib/util';
import { Class, Student } from '@prisma/client';
import type { GetServerSideProps, NextPage } from 'next';
import { unstable_getServerSession } from 'next-auth';
import { useSession } from 'next-auth/react';
import Head from 'next/head';
import { authOptions } from './api/auth/[...nextauth]';
import Instructor from './_instructor';
import Landing from './_landing';
import StudentPage from './_student';

export const getServerSideProps: GetServerSideProps = async (context) => {
  const session = await unstable_getServerSession(context.req, context.res, authOptions);

  if (session?.user && !isStudent(session)) {
    const classes = await prisma.class.findMany({
      where: {
        user: {
          email: session.user.email
        },
      },
      include: {
        students: true,
      }
    });

    return {
      props: { classes },
    }
  } else {
    console.log('no session');
    return { props: {} }
  }
};

interface IndexProps {
  classes?: (Class & {
    students: Student[]
  })[]
}

const Index: NextPage<IndexProps> = ({ classes }) => {
  const { data: session, status } = useSession()
  const loading = status === "loading";

  return (
    <>
      <Head>
        <title>spatial skills test</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {
        loading ? (
          <p>loading... {/* TODO: draw some spinner element or something */}</p>
        ) : (
          session ? (
            isStudent(session) ? (
              <StudentPage session={session} />
            ) : (
              <Instructor session={session} classes={classes} />
            )
          ) : (
            <Landing />
          )
        )
      }
    </>
  )
};

export default Index
